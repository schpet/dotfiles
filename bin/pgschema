#!/bin/bash

set -euo pipefail

# dumps a schema description (postgres' \d) for every table into plaintext files

# Check if DATABASE_URL environment variable is set
if [ -z "${DATABASE_URL:-}" ]; then
    echo "DATABASE_URL environment variable is not set. Please set it before running this script."
    exit 1
fi

echo "connecting to $DATABASE_URL"

# Create 'pgschema' directory if not exists
[ ! -d "pgschema" ] && mkdir "pgschema"

# Fetch all table names from the public schema
TABLE_NAMES=$(psql "$DATABASE_URL" -t  -c "SELECT table_name FROM information_schema.tables WHERE table_schema='public'" | grep -v "rows)" | grep -v "Time:")

# Loop over each table name and dump its structure (\d) into a plaintext file inside 'pgschema' directory
for TABLE_NAME in $TABLE_NAMES; do
    psql "$DATABASE_URL" -c "\d $TABLE_NAME" > "pgschema/$TABLE_NAME.txt"
done

# Dump the whole schema as well
pg_dump "$DATABASE_URL" -s -f pgschema/schema.sql
