#!/bin/bash

# Function to calculate date
calculate_date() {
    local input=$1
    if [[ $input =~ ^-?[0-9]+$ ]]; then
        # If input is a number (positive or negative), treat it as days relative to today
        gdate -d "$input days" '+%Y-%m-%d'
    else
        # Otherwise, assume it's a date string
        gdate -d "$input" '+%Y-%m-%d'
    fi
}

# Check if fzf is installed
if ! command -v fzf &> /dev/null
then
    echo "fzf command could not be found. Please install fzf." >&2
    exit 1
fi


# If no argument is provided, prompt user to select a date. Else use the provided date.
if [ $# -ne 1 ]
then
    # Generate date options for the last 10 days and pipe to fzf
    selected_option=$(
        for i in {0..9}
        do
            current_date=$(gdate -d "$i days ago" '+%Y-%m-%d')
            day_name=$(gdate -d "$i days ago" '+%A')
            relative_desc=""
            if [ $i -eq 0 ]; then
                relative_desc="today"
            elif [ $i -eq 1 ]; then
                relative_desc="yesterday"
            else
                relative_desc="$i days ago"
            fi
            printf "[ ] %s %s (%s)\n" "$day_name" "$current_date" "$relative_desc"
        done | fzf --height 12 --reverse --prompt="Select a date> "
    )

    # Exit if fzf was cancelled (no selection or empty output)
    if [ -z "$selected_option" ]; then
        echo "No date selected." >&2
        exit 1
    fi

    # Extract the date (YYYY-MM-DD) from the selection
    start_date=$(echo "$selected_option" | awk '{print $3}')
else
    start_date=$(calculate_date "$1")
fi

# Calculate the next day
next_date=$(gdate -I -d "$start_date + 1 day")

# Print status info to stderr
day_of_week=$(gdate '+%a' -d "$start_date" | tr '[:upper:]' '[:lower:]')
git_show_output=$(git show -s --format=%D)
echo "$start_date ($day_of_week) :: $git_show_output" >&2

# Run git log for the specified day
git log --after="$start_date 00:00:00" --before="$next_date 00:00:00" --date=local --author="<$(git config user.email)>" --format="%ad %s" --reverse
