#!/bin/bash

# Function to calculate date
calculate_date() {
    local input=$1
    if [[ $input =~ ^-?[0-9]+$ ]]; then
        # If input is a number (positive or negative), treat it as days relative to today
        gdate -d "$input days" '+%Y-%m-%d'
    else
        # Otherwise, assume it's a date string
        gdate -d "$input" '+%Y-%m-%d'
    fi
}

# If no argument is provided, use today's date. Else use the provided date.
if [ $# -ne 1 ]
then
    start_date=$(date '+%Y-%m-%d')
else
    start_date=$(calculate_date "$1")
fi

# Calculate the next day
next_date=$(gdate -I -d "$start_date + 1 day")

# Print status info to stderr
day_of_week=$(gdate '+%a' -d "$start_date" | tr '[:upper:]' '[:lower:]')
git_show_output=$(git show -s --format=%D)
echo "$start_date ($day_of_week) :: $git_show_output" >&2

# Run git log for the specified day
git log --after="$start_date 00:00:00" --before="$next_date 00:00:00" --date=local --author="<$(git config user.email)>" --format="%ad %s" --reverse
