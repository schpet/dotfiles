#!/usr/bin/env bash
# beadloop.sh - Autonomous agent loop for bd (beads) issue tracker
#
# Continuously checks for ready work in bd and delegates to claude -p to complete it.
# If claude errors, the loop continues and retries.

set -euo pipefail

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

log() {
  echo -e "${BLUE}[beadloop]${NC} $*"
}

log_success() {
  echo -e "${GREEN}[beadloop]${NC} $*"
}

log_warn() {
  echo -e "${YELLOW}[beadloop]${NC} $*"
}

log_error() {
  echo -e "${RED}[beadloop]${NC} $*"
}

# Check if bd command exists
if ! command -v bd &> /dev/null; then
  log_error "bd command not found. Please install beads first."
  exit 1
fi

# Check if claude command exists
if ! command -v claude &> /dev/null; then
  log_error "claude command not found. Please install Claude Code first."
  exit 1
fi

# Main loop
log "Starting beadloop - checking for work continuously..."
log "Press Ctrl+C to stop"
echo ""

ITERATION=0

while true; do
  ITERATION=$((ITERATION + 1))
  log "Iteration $ITERATION: Checking for ready work..."

  # Check for ready work using bd ready --json
  READY_OUTPUT=$(bd ready --json 2>&1) || {
    log_error "Failed to run 'bd ready': $READY_OUTPUT"
    log_warn "Waiting 10 seconds before retry..."
    sleep 10
    continue
  }

  # Parse JSON to check if there are any ready issues
  READY_COUNT=$(echo "$READY_OUTPUT" | jq -r 'length' 2>/dev/null || echo "0")

  if [ "$READY_COUNT" -eq 0 ]; then
    log "No ready work found. Waiting 30 seconds before checking again..."
    sleep 30
    continue
  fi

  log_success "Found $READY_COUNT ready issue(s)!"

  # Get the first ready issue
  FIRST_ISSUE=$(echo "$READY_OUTPUT" | jq -r '.[0]' 2>/dev/null)
  ISSUE_ID=$(echo "$FIRST_ISSUE" | jq -r '.id // empty')
  ISSUE_TITLE=$(echo "$FIRST_ISSUE" | jq -r '.title // empty')

  if [ -z "$ISSUE_ID" ]; then
    log_error "Could not parse issue ID from ready work"
    sleep 10
    continue
  fi

  log_success "Working on: $ISSUE_ID - $ISSUE_TITLE"
  echo ""

  # Construct prompt for claude
  PROMPT="Please work on the following bd (beads) issue:

Issue ID: $ISSUE_ID
Title: $ISSUE_TITLE

Instructions:
1. First, run 'bd show $ISSUE_ID --json' to get full details
2. Claim the issue with 'bd update $ISSUE_ID --status in_progress --json'
3. Complete the work according to the issue description
4. If you discover new issues during work, create them with discovered-from dependency
5. When done, close the issue with 'bd close $ISSUE_ID --reason \"Completed\" --json'
6. If blocked or you encounter errors you cannot resolve, update the issue status to blocked

Work autonomously and thoroughly. Make sure to test your changes."

  # Run claude -p with the prompt
  log "Invoking claude -p to complete the work..."
  echo ""

  if claude -p "$PROMPT"; then
    log_success "Claude completed successfully!"
  else
    EXIT_CODE=$?
    log_error "Claude exited with error code $EXIT_CODE"
    log_warn "Continuing to next iteration..."
  fi

  echo ""
  log "Waiting 5 seconds before next check..."
  sleep 5
done
