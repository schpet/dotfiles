#:schema https://jj-vcs.github.io/jj/latest/config-schema.json

[user]
name = "Peter Schilling"
email = "code@schpet.com"

[ui]
diff-editor = "meld"
merge-editor = "meld"

[fsmonitor]
backend = "watchman"

[fsmonitor.watchman]
register-snapshot-trigger = true

[revset-aliases]
'closest_bookmark(to)' = 'heads(::to & bookmarks())'
'closest_pushable(to)' = 'heads(::to & ~description(exact:"") & (~empty() | merges()))'

[aliases]
tug = ["bookmark", "move", "--from", "closest_bookmark(@)", "--to", "closest_pushable(@)"]
llm-describe = ["util", "exec", "--", "sh", "-c", '''
REF="${1:-@}"
DIFF=$(jj show --git "$REF")
CURRENT_MSG=$(jj log -r "$REF" --no-graph -T description)
TRAILERS=$(echo "$CURRENT_MSG" | git interpret-trailers --only-trailers 2>/dev/null || echo "")
LLM_MSG=$(echo "$DIFF" | llm -o reasoning_effort minimal "suggest a commit message for this change. write it in imperative mood (e.g. Fix, Add, Update). First line: 50 chars max. Focus on WHAT changed and WHY, not how. No markdown formatting. respond with just the commit message.")
if [ -n "$TRAILERS" ]; then
    FULL_MSG=$(printf "%s\n\n%s" "$LLM_MSG" "$TRAILERS")
else
    FULL_MSG="$LLM_MSG"
fi
jj describe "$REF" -m "$FULL_MSG"
''', "sh"]

[template-aliases]
'evolog_detailed' = '''
separate("\n",
  label("commit_id", commit.change_id().shortest(8) ++ " ") ++
  if(commit.hidden(), label("hidden", "hidden ")) ++
  commit.author().name() ++ " " ++
  commit.author().timestamp().local().format("%Y-%m-%d %H:%M:%S") ++ " " ++
  label("commit_id", commit.commit_id().short()),
  if(commit.description(),
    indent("  ", commit.description()),
    label("description placeholder", indent("  ", "(no description set)")),
  ),
  if(operation,
    indent("  ",
      label("separator", "--") ++ " operation " ++
      operation.id().short() ++ " " ++
      operation.description()
    ),
  ),
)
'''
