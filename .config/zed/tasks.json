// Static tasks configuration.
//
// Example:
[
  {
    "label": "rspec_line",
    "command": "bundle exec rspec",
    "args": ["\"$ZED_RELATIVE_FILE:$ZED_ROW\""],
    "tags": ["ruby-test"],
    "shell": "system"
  },
  {
    "label": "rspec_file",
    "command": "bundle exec rspec",
    "args": ["\"$ZED_RELATIVE_FILE\""],
    "tags": ["ruby-test"],
    "shell": "system"
  },
  {
    "label": "rubyfmt",
    "command": "rubyfmt",
    "args": ["-i", "\"$ZED_RELATIVE_FILE\""],
    "tags": ["ruby-format"],
    "shell": "system",
    "reveal": "never",
    "hide": "on_success"
  },
  {
    "label": "just",
    "command": "just"
  },
  {
    "label": "git commit all empty",
    "command": "git add . && git commit -a --allow-empty-message -m \"\"",
    "reveal": "never",
    "hide": "on_success"
  },
  {
    "label": "git commit all",
    "command": "git add . && git commit -a -v",
    "reveal": "always",
    "hide": "on_success"
  },
  {
    "label": "Task journal entry",
    "command": "zed-preview ~/journal/ && zed-preview ~/journal/$(date +'%Y/%m/%d').md",
    "shell": {
      "program": "bash"
    }
  },
  {
    "label": "aider_watch_rb",
    "command": "aider -c .config/aider.conf.rb.yml --no-detect-urls --watch-files",
    "hide": "on_success",
    "allow_concurrent_runs": false,
    "reveal_target": "dock",
    "use_new_terminal": false,
    "tags": ["aider-rb"]
  },
  {
    "label": "aider_watch_js",
    "command": "aider -c .config/aider.conf.js.yml --no-detect-urls --watch-files",
    "hide": "on_success",
    "allow_concurrent_runs": false,
    "reveal_target": "dock",
    "tags": ["aider-js"]
  },
  {
    "label": "start lazygit",
    "command": "lazygit -p $ZED_WORKTREE_ROOT"
  },
  {
    "label": "linear issue view -a",
    "command": "linear issue view -a",
    "hide": "on_success",
    "reveal": "never",
    "show_summary": false,
    "show_command": false,
    "tags": ["linear"]
  },
  {
    "label": "linear issue view",
    "command": "linear issue view | awk 'BEGIN{print \"<linearIssue>\"} {print} END{print \"\\n</linearIssue>\"}' | pbcopy",
    "hide": "on_success",
    "reveal": "never",
    "show_summary": false,
    "show_command": false,
    "tags": ["linear"]
  }
]
